import java.util.*;

//56. 合并区间
public class MergeIntervals_56 {
    public int[][] merge(int[][] intervals) {

        LinkedList<int[]> ll=new LinkedList<>();
        Arrays.sort(intervals, new Comparator<int[]>() {
            @Override
            public int compare(int[] e1, int[] e2) {
                if (e1[0]==e2[0]) return e1[1]-e2[1];   // e1[1]-e2[1]表示对于第二列元素进行升序排序
                return e1[0]-e2[0];
            }
        });
       List<int[]> list= Arrays.stream(intervals).toList();
        for (int i = 0; i < list.size(); i++) {
            int[] listt=list.get(i);
            if(ll.isEmpty()){
                ll.add(listt);
            }
            int[] temp=ll.peekLast();
            //第一位比第一位大
            if(temp[0]<=listt[0]){
                //第二位比第一位大
                if(temp[1]>=listt[0]){
                    //第二位比第一位小
                    if(temp[1]<=listt[1]){
                        ll.removeLast();
                        int[] t={temp[0],listt[1]};
                        ll.add(t);
                    }
                }else{
                    int[] t={listt[0],listt[1]};
                    ll.add(t);
                }

            }
        }
        int[][] ret = new int[ll.size()][2];
        int i=0;
        while(!ll.isEmpty()){
            int[] s=ll.poll();
            ret[i]=s;
            i++;
        }

        return ret;
    }



    public static void main(String[] args) {
//        int[][] s={{1,3},{2,6},{8,10},{15,18}};
//        int[][] s={{4,5},{2,4},{4,6},{3,4},{0,0},{1,1},{3,5},{2,2}};
//        int[][] s={{1,4},{0,0}};
        int[][] s={{362,367},{314,315},{133,138},{434,443},{202,203},{144,145},{229,235},{205,212},{314,323},{128,129},{413,414},{342,345},{43,49},{333,342},{173,178},{386,391},{131,133},{157,163},{187,190},{186,186},{17,19},{63,69},{70,79},{386,391},{98,102},{236,239},{195,195},{338,338},{169,170},{151,153},{409,416},{377,377},{90,96},{156,165},{182,186},{371,372},{228,233},{297,306},{56,61},{184,190},{401,403},{221,228},{203,212},{39,43},{83,84},{66,68},{80,83},{32,32},{182,182},{300,306},{235,238},{267,272},{458,464},{114,120},{452,452},{372,375},{275,280},{302,302},{5,9},{54,62},{237,237},{432,439},{415,421},{340,347},{356,358},{165,168},{15,17},{259,265},{201,204},{192,197},{376,383},{210,211},{362,367},{481,488},{59,64},{307,315},{155,164},{465,467},{55,60},{20,24},{297,304},{207,210},{322,328},{139,142},{192,195},{28,36},{100,108},{71,76},{103,105},{34,38},{439,441},{162,168},{433,433},{368,369},{137,137},{105,112},{278,280},{452,452},{131,132},{475,480},{126,129},{95,104},{93,99},{394,403},{70,78}};
        new MergeIntervals_56().merge(s);
    }
}
